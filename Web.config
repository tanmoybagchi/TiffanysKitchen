<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <location path="dist/index.html">
    <system.webServer>
      <staticContent>
        <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="0.00:00:01" />
      </staticContent>
    </system.webServer>
  </location>

  <system.webServer>
    <directoryBrowse enabled="false" />
    <handlers>
      <remove name="WebDAV" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
    </handlers>

    <!-- GZip static file content.  Overrides the server default which only compresses static files over 2700 bytes -->
    <httpCompression minFileSizeForComp="1024" staticCompressionIgnoreHitFrequency="true">
      <scheme dll="%Windir%\system32\inetsrv\gzip.dll" name="gzip" staticCompressionLevel="9" />
      <dynamicTypes>
        <add enabled="true" mimeType="text/*" />
        <add enabled="true" mimeType="message/*" />
        <add enabled="true" mimeType="application/javascript" />
        <add enabled="true" mimeType="application/json" />
        <add enabled="false" mimeType="*/*" />
      </dynamicTypes>
      <staticTypes>
        <add enabled="true" mimeType="text/*" />
        <add enabled="true" mimeType="message/*" />
        <add enabled="true" mimeType="application/javascript" />
        <add enabled="true" mimeType="application/json" />
        <add enabled="false" mimeType="*/*" />
      </staticTypes>
    </httpCompression>

    <httpErrors errorMode="Detailed" />

    <httpProtocol>
      <customHeaders>
        <clear />
        <!--
            # MIME type sniffing security protection
            Enabled by default as there are very few edge cases where you wouldn't want this enabled.
            Theres additional reading below; but the tldr, it reduces the ability of the browser (mostly IE)
            being tricked into facilitating driveby attacks.
            http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
            http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-v-comprehensive-protection.aspx
        -->
        <add name="X-Content-Type-Options" value="nosniff" />
        <!--
            # X-Frame-Options
            The X-Frame-Options header indicates whether a browser should be allowed
            to render a page within a frame or iframe.
            The valid options are DENY (deny allowing the page to exist in a frame)
            or SAMEORIGIN (allow framing but only from the originating host)
            Without this option set the site is at a higher risk of click-jacking.
        -->
        <add name="X-Frame-Options" value="SAMEORIGIN" />
        <!--
            Force the latest IE version, in various cases when it may fall back to IE7 mode
            github.com/rails/rails/commit/123eb25#commitcomment-118920
            Use ChromeFrame if it's installed for a better experience for the poor IE folk
        -->
        <add name="X-UA-Compatible" value="IE=Edge,chrome=1" />
        <!--
            # X-XSS-Protection
            The X-XSS-Protection header is used by Internet Explorer version 8+
            The header instructs IE to enable its inbuilt anti-cross-site scripting filter.
            If enabled, without 'mode=block', there is an increased risk that
            otherwise non-exploitable cross-site scripting vulnerabilities may potentially become exploitable
        -->
        <add name="X-XSS-Protection" value="1; mode=block" />
        <!-- A little extra security (by obscurity), removings fun but adding your own is better -->
        <remove name="X-Powered-By" />
        <add name="X-Powered-By" value="My Little Pony" />
      </customHeaders>
    </httpProtocol>

    <modules>
      <!-- Managed (.net) modules-->
      <remove name="AnonymousIdentification" />
      <remove name="DefaultAuthentication" />
      <remove name="FormsAuthentication" />
      <remove name="FileAuthorization" />
      <remove name="OutputCache" />
      <remove name="Profile" />
      <remove name="RoleManager" />
      <remove name="ScriptModule-4.0" />
      <remove name="ServiceModel-4.0" />
      <remove name="Session" />
      <remove name="UrlAuthorization" />
      <remove name="UrlMappingsModule" />
      <remove name="WebDAVModule" />
      <remove name="WindowsAuthentication" />
      <!-- Managed (.net) modules end-->
    </modules>

    <rewrite>
      <!--
        Angular-CLI places the compiled output in the dist/ folder.
        We need to send all incoming requests for web assets (html, js, css, pdf, etc.) to the dist/ folder.
        Except API requests. They have /api/ in the url and can go on as normal.

        The rules are executed in sequence with the output of one rule becoming the input of the next rule.
      -->
      <rules>
        <!-- If this isn't an API request, add dist/ to the url. -->
        <rule name="Rule 1">
          <match url=".*" />
          <action type="Rewrite" url="dist/{R:0}" logRewrittenUrl="true" />
        </rule>
        <!-- If the url doesn't specify an endpoint send back index.html. This mirrors what the defaultDocument setting used to do. -->
        <rule name="Rule 2" stopProcessing="true">
          <match url="dist/$" />
          <action type="Rewrite" url="dist/index.html" logRewrittenUrl="true" />
        </rule>
        <!-- If the url doesn't specify a web asset (html, js, css, pdf, etc.) send back index.html. This allows deep linking. -->
        <rule name="Rule 3" stopProcessing="true">
          <match url="dist/.*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <!--<add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />-->
          </conditions>
          <action type="Rewrite" url="dist/index.html" logRewrittenUrl="true" />
        </rule>
      </rules>
    </rewrite>

    <security>
      <authentication>
        <anonymousAuthentication enabled="true" />
        <windowsAuthentication enabled="false" />
      </authentication>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="2147483647" maxQueryString="32768" />
      </requestFiltering>
    </security>

    <staticContent>
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="365.00:00:00" />
      <!-- HTML4 Web font mime types -->
      <!-- Remove default IIS mime type for .eot which is application/octet-stream -->
      <remove fileExtension=".eot" />
      <mimeMap fileExtension=".eot" mimeType="application/vnd.ms-fontobject" />
      <remove fileExtension=".ttf" />
      <mimeMap fileExtension=".ttf" mimeType="application/x-font-ttf" />
      <remove fileExtension=".ttc" />
      <mimeMap fileExtension=".ttc" mimeType="application/x-font-ttf" />
      <remove fileExtension=".otf" />
      <mimeMap fileExtension=".otf" mimeType="font/opentype" />
      <remove fileExtension=".woff" />
      <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
      <remove fileExtension=".ts" />
      <mimeMap fileExtension=".ts" mimeType="text/x-typescript" />
    </staticContent>

    <urlCompression doStaticCompression="true" doDynamicCompression="true" />
    <!--<validation validateIntegratedModeConfiguration="false" />-->
  </system.webServer>
</configuration>
